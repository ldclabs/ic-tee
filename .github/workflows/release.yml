name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string
jobs:
  build-wasm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build canisters
      run: |
        rustup target add wasm32-unknown-unknown
        cargo install ic-wasm
        mkdir -p out
        cargo build --target wasm32-unknown-unknown --release --locked -p ic_tee_identity_canister
        for CAN in ic_tee_identity_canister
        do
          cp "target/wasm32-unknown-unknown/release/$CAN.wasm" out/
          cp "src/$CAN/$CAN.did" "out/$CAN.did"
          WASM="out/$CAN.wasm"
          ic-wasm $WASM -o $WASM metadata candid:service -f "out/$CAN.did" -v public
          ic-wasm $WASM -o $WASM shrink
          ic-wasm $WASM -o $WASM optimize O3 --inline-functions-with-loops
          gzip $WASM
          SHA256="$(sha256sum < "out/$CAN.wasm.gz" | sed 's/ .*$//g')"
          echo $SHA256 > "out/$CAN.wasm.gz.$SHA256.txt"
        done
        ls -lah out
    - name: Upload wasm artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wasm-artifacts
        path: out/*
  build-binary:
    runs-on: ubuntu-latest
    container: clux/muslrust:1.86.0-stable
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build linux binary
      run: |
        mkdir -p out
        rustup target add x86_64-unknown-linux-musl
        export RUSTFLAGS="-C target-feature=+crt-static -C link-arg=-s"
        for PACK in ic_tee_nitro_gateway ic_tee_host_daemon ic_tee_daemon ic_tee_cli
        do
          cargo build --release --locked -p $PACK --target x86_64-unknown-linux-musl
          cp "target/x86_64-unknown-linux-musl/release/$PACK" "out/"
          SHA256="$(sha256sum < "out/$PACK" | sed 's/ .*$//g')"
          echo $SHA256 > "out/$PACK.$SHA256.txt"
        done
        ls -lah out
    - name: Upload binary artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-artifacts
        path: out/*
  release:
    runs-on: ubuntu-latest
    needs: [build-wasm, build-binary]
    steps:
    - name: Download wasm artifacts
      uses: actions/download-artifact@v4
      with:
        name: wasm-artifacts
        path: out-wasm
    - name: Download binary artifacts
      uses: actions/download-artifact@v4
      with:
        name: binary-artifacts
        path: out-binary
    - name: Get release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        name: Release ${{ steps.get_tag.outputs.tag }}
        draft: ${{ github.event_name == 'workflow_dispatch' }}
        files: |
          out-wasm/*
          out-binary/*